/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mobiwire.print;

import com.sagereal.utils.BMPGenerator;
import de.enough.polish.ui.Form;
import de.enough.polish.ui.StringItem;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import  java.io.InputStream;
import  java.util.Vector;
import javax.microedition.lcdui.Image;

/**
 * Constructs the layout to be printed.
 *
 * @author sgherghesanu
 */
public class PrintLayout extends PrintTemplate {

    /**
     * instance of PrintLayout.
     */
    private static PrintLayout instance = null;
    /**
     * offline flag.
     */
    private boolean offline;

    public boolean isOffline() {
        return offline;
    }

    public void setOffline(boolean offline) {
        this.offline = offline;
    }

    /**
     * Default constructor.
     */
    PrintLayout() {
        offline = false; //default is offline
    }

    /**
     * Factory of the layout instance.
     *
     * @return instance of the layout.
     */
    public static PrintLayout getInstance() {
        if (instance == null) {
            return new PrintLayout();
        } else {
            return instance;
        }
    }

    /**
     * Make a Vector of StringItemHelper objects from the label and the text of
     * the StringItem from a form.
     *
     * @return Vector of StringItemHelper objects.
     */
    public Vector makeTree() {
        Vector vector = new Vector();
        StringItemHelper ihelp;
        for (int i = 0; i < super.getBody().size(); i++) {
            if (super.getBody().get(i) instanceof StringItem) {
                ihelp = new StringItemHelper(
                        ((StringItem) super.getBody().get(i)).getLabel(), ((StringItem) super.getBody().get(i)).getText());
                vector.addElement(ihelp);
            }


        }
        return vector;
    }

    /**
     * For offline printing of StringItem helper.
     *
     * @param vec vector of string from the form
     */
    public void printLayout(Vector vec) {
        String liner = null;

        for (int i = 0; i < vec.size(); i++) {
            liner = ((StringItemHelper) vec.elementAt(i)).getLabel() + ((StringItemHelper) vec.elementAt(i)).getText();
            //System.err.println("liner " + liner);
        }
    }

    /**
     * Real printing layout.
     *
     * @param is the image as stream
     * @param vec the Vector generated by makeTree()
     * @return the stream of final layout
     */
    public static InputStream makeLayout(InputStream is, Vector vec) {
        InputStream ips = null;
        Image tempImage = null;
        String liner = null;
        try {
            tempImage = Image.createImage(is);
            //tempImage = ImageUtil.image_add_str(tempImage, DateUtil.DateString(), 77, 7, Font.SIZE_SMALL);

            for (int i = 0; i < vec.size(); i++) {
                liner = ((StringItemHelper) vec.elementAt(i)).getLabel() + ((StringItemHelper) vec.elementAt(i)).getText();
                // System.err.println("liner " + liner);
                //tempImage = ImageUtil.image_add_str(tempImage, liner, 3, 7 + 50 * (i + 1), Font.SIZE_SMALL);
            }



            return new DataInputStream(new ByteArrayInputStream(
                    BMPGenerator.encodeBMP(tempImage)));


        } catch (Exception e) {
            e.getMessage();
        }
        return ips;
    }

    /**
     * Returns all the stringItems of a Form.
     *
     * @param f form
     * @return array of StringItems
     */
    public StringItem[] getFormStringItems(Form f) {
        StringItem[] strItems = new StringItem[f.size()];
        for (int i = 0; i < f.size(); i++) {

            if (f.get(i) instanceof StringItem) {
                strItems[i] = (StringItem) f.get(i);
            }
        }

        return strItems;
    }

    /**
     * Returns the StringItem with certain label.
     *
     * @param label of the StringItem
     * @param f form
     * @return StringItem instance
     */
    public StringItem getStringItemByLabel(String label, Form f) {
        StringItem stri = null;
        StringItem[] allStri = getFormStringItems(f);
        for (int i = 0; i < allStri.length; i++) {
            if (label.equals(allStri[i].getLabel())) {
                stri = allStri[i];
            }
        }

        return stri;
    }
}
